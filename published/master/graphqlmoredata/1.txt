
type Film {
  id: ID
  apple_movietrailer_id: String
  art_direction_by: [ArtDirector]
  casting_director: [CastingDirector]
  cinematography: [Cinematographer]
  collections: [Collection]
  costume_design_by: [CostumeDesigner]
  country: [Location]
  directed_by: [Director]
  distributors: [Distributor]
  dubbing_performances: [Actor]
  edited_by: [Editor]
  executive_produced_by: [Producer]
  fandango_id: String
  featured_locations: [Location]
  featured_song: [Song]
  festivals: [Festival]
  format: [Format]
  genre: [Genre]
  initial_release_date: DateTime
  locations: [Location]
  metacritic_id: String
  music: [MusicContributor]
  name: String
  netflix_id: String
  personal_appearances: [PersonalAppearance]
  prequel: [Film]
  produced_by: [Producer]
  production_companies: [ProductionCompany]
  production_design_by: [ProductionDesigner]
  rating: [Rating]
  release_date_s: [RegionalReleaseDate]
  rottentomatoes_id: String
  sequel: [Film]
  series: [Series]
  set_decoration_by: [SetDecorator]
  songs: [Song]
  starring: [Performance]
  story_by: [StoryContributor]
  subjects: [Subject]
  tagline: String
  traileraddict_id: String
  written_by: [Writer]
}
type Actor {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  performances: [Performance]
  dubbing_performances: [Film]
}
type ArtDirector {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type CastingDirector {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type Character {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  portrayed_in_films: [Film]
  portrayed_in_films_dubbed: [Film]
}
type Cinematographer {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type Collection {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type Company {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type CompanyRoleOrService {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  companies_performing_this_role_or_service: [Company]
}
type CostumeDesigner {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  costume_design_for_film: [Film]
}
type CrewGig {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  crew_role: [Job]
  crewmember: [CrewMember]
  films: [Film]
}
type CrewMember {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films_crewed: [Film]
}
type Critic {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
}
type Cut {
  id: ID
  name: String
  films: [Film]
  note: String
  release_region: [Location]
  runtime: Float
  type_of_cut: [CutType]
}
type CutType {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
}
type Director {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type DistributionMedium {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type Distributor {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films_distributed: [Film]
}
type Editor {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  film: [Film]
}
type FeaturedSong {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  featured_in_film: [Film]
  performed_by: [Film]
}
type Festival {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  date_founded: DateTime
  focus: [FestivalFocus]
  individual_festivals: [FestivalEvent]
  location: [Location]
  sponsoring_organization: [FestivalSponsorship]
}
type FestivalEvent {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  festivals: [Festival]
  films: [Film]
}
type FestivalFocus {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  festivals: [Festival]
}
type FestivalSponsor {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  festivals: [Festival]
}
type FestivalSponsorship {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  festivals: [Festival]
}
type Format {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  format: [Film]
}
type Genre {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type Location {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
  featured_in_films: [Film]
}
type Job {
  id: ID
  name: String
  films: [Film]
}
type MusicContributor {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type Producer {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
  films_executive_produced: [Film]
}
type ProductionDesigner {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type Rating {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  country: [Location]
  minimum_accompanied_age: Int
  minimum_unaccompanied_age: Int
  rating_system: [RatingSystem]
  films: [Film]
}
type RatingSystem {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  ratings: [Rating]
  jurisdiction: [Location]
}
type RegionalReleaseDate {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  release_date: DateTime
  release_region: [Location]
}
type Series {
  id: ID
  name: String  @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type SetDecorator {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  sets_designed: [Film]
}
type Song {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type SongPerformer {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  songs: [Song]
}
type StoryContributor {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  story_credits: [Film]
}
type Subject {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type Writer {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type Performance {
  id: ID
  actor: [Actor]
  character: [Character]
  character_note: String
  films: [Film]
  special_performance_type: [SpecialPerformanceType]
  appearances: [PersonalAppearance]
}
type PersonalAppearance {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
  person: [PersonOrEntityAppearingInFilm]
  type_of_appearance: [PersonalAppearanceType]
  appearances: [PersonalAppearance]
}
type PersonalAppearanceType {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
}
type PersonOrEntityAppearingInFilm {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  film: Film
  films: [Film]
}
type ProductionCompany {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  films: [Film]
}
type SpecialPerformanceType {
  id: ID
  name: String @search(by: ["fulltext","hash","regexp","term"])
  performance_type: [Film]
}