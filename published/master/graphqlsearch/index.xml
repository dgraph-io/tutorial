<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graphqlsearches on A Tour of Dgraph</title>
    <link>https://dgraph.io/tour/master/graphqlsearch/</link>
    <description>Recent content in Graphqlsearches on A Tour of Dgraph</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 May 2017 15:32:26 +1000</lastBuildDate><atom:link href="https://dgraph.io/tour/master/graphqlsearch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Indexes</title>
      <link>https://dgraph.io/tour/master/graphqlsearch/1/</link>
      <pubDate>Mon, 15 May 2017 15:31:59 +1000</pubDate>
      
      <guid>https://dgraph.io/tour/master/graphqlsearch/1/</guid>
      <description>When Dgraph searches for strings, dates, or other values based on a filter, it needs an index to make the search efficient. We&amp;rsquo;ve already seen examples of how to specify the indexes in a schema update.
Int, Float, and DateTime have default indexes, but String has a few options for which search index types to use. You can build multiple indexes for the same String-valued predicate.
For String, the following indexes are available:</description>
    </item>
    
    <item>
      <title>Some Lines of Data</title>
      <link>https://dgraph.io/tour/master/graphqlsearch/2/</link>
      <pubDate>Mon, 15 May 2017 15:31:42 +1000</pubDate>
      
      <guid>https://dgraph.io/tour/master/graphqlsearch/2/</guid>
      <description>To better illustrate the following examples, it will help to have some data that contains sentence-length strings.
You will note the presence of a few movie lines to make the examples interesting, along with the the characters and movies associated with these examples.
Run the mutation provided here, and then continue to the next lesson.</description>
    </item>
    
    <item>
      <title>Term search</title>
      <link>https://dgraph.io/tour/master/graphqlsearch/3/</link>
      <pubDate>Mon, 15 May 2017 15:31:42 +1000</pubDate>
      
      <guid>https://dgraph.io/tour/master/graphqlsearch/3/</guid>
      <description>With the term index the functions allofterms and anyofterms find strings that match all of the listed terms or any one of the listed terms. Previous queries in the tour used these searches.
Try both options and note the difference in the query results.</description>
    </item>
    
    <item>
      <title>Regular Expressions</title>
      <link>https://dgraph.io/tour/master/graphqlsearch/4/</link>
      <pubDate>Mon, 15 May 2017 15:31:42 +1000</pubDate>
      
      <guid>https://dgraph.io/tour/master/graphqlsearch/4/</guid>
      <description>Regular expressions require the regexp search by directive which applies a trigram index. A trigram is a substring of three consecutive characters, or runes.
The trigrams of &amp;ldquo;trigram&amp;rdquo; are: &amp;ldquo;tri&amp;rdquo;, &amp;ldquo;rig&amp;rdquo;, &amp;ldquo;igr&amp;rdquo;, &amp;ldquo;gra&amp;rdquo; and &amp;ldquo;ram&amp;rdquo;.
Valid regular expressions can be converted to a trigram query against a search index. Dgraph searches the trigram index for possible matches and then runs the full regular expression against the possibles, requiring that at least one matching trigram is found.</description>
    </item>
    
    <item>
      <title>Exact index and inequality</title>
      <link>https://dgraph.io/tour/master/graphqlsearch/5/</link>
      <pubDate>Mon, 15 May 2017 15:31:42 +1000</pubDate>
      
      <guid>https://dgraph.io/tour/master/graphqlsearch/5/</guid>
      <description>With the exact index, inequalities on strings can be used in filters. Try running the query shown here to return lines that are alphabetically between &amp;ldquo;I&amp;rdquo; and &amp;ldquo;J&amp;rdquo;.
The hash index lets you quickly filter for eq (equality) on strings.</description>
    </item>
    
    <item>
      <title>Full Text Search</title>
      <link>https://dgraph.io/tour/master/graphqlsearch/6/</link>
      <pubDate>Mon, 15 May 2017 15:31:42 +1000</pubDate>
      
      <guid>https://dgraph.io/tour/master/graphqlsearch/6/</guid>
      <description>Full text search is what Google and other search engines do for web pages. It&amp;rsquo;s different than term matching because it factors in language, grammar, and tense. For example, you will see matches on the search keyword &amp;ldquo;run&amp;rdquo; with documents that contain very common strings like &amp;ldquo;run&amp;rdquo;, &amp;ldquo;running&amp;rdquo; and &amp;ldquo;ran&amp;rdquo;.
Full text search does not match terms exactly, but instead makes use of the following techniques:
 Stemming: finding a common base word so differences in tense, plural/singular or other inflection don&amp;rsquo;t prevent a match, and Stop words: removing common words such as &amp;ldquo;and&amp;rdquo;, &amp;ldquo;or&amp;rdquo;, &amp;ldquo;it&amp;rdquo;; along with some additional words that occur too often.</description>
    </item>
    
    <item>
      <title>Congratulations</title>
      <link>https://dgraph.io/tour/master/graphqlsearch/7/</link>
      <pubDate>Mon, 15 May 2017 15:32:26 +1000</pubDate>
      
      <guid>https://dgraph.io/tour/master/graphqlsearch/7/</guid>
      <description>Youâ€™ve finished this module!
You can use what you learned in this module to search GraphQL datasets.
Check out the list of sections again, go back and review anything that wasn&amp;rsquo;t clear, or continue to the next module.</description>
    </item>
    
  </channel>
</rss>
